     1                                  
     2                                  
     3                                  EXTERN getChar
     4                                  EXTERN finish
     5                                  EXTERN putChar
     6                                  EXTERN outputNumber
     7                                  EXTERN inputNumber
     8                                  
     9                                  global _start
    10                                  
    11                                  section .bss
    12 00000000 <res 00000004>          	a resd 1
    13 00000004 <res 00000004>          	b resd 1
    14 00000008 <res 00000004>          	c resd 1
    15 0000000C <res 00000004>          	disc resd 1
    16 00000010 <res 00000002>          	buff resw 1
    17 00000012 <res 00000004>          	result resd 1
    18                                  	;sign resd 1
    19                                  	;rootbuf resq 1
    20                                  	;hmm resd 1
    21                                  
    22                                  section .data
    23 00000000 4E6F20736F6C757469-     	err_msg db "No solutions"
    24 00000009 6F6E73             
    25                                  	len equ $-err_msg
    26 0000000C 4E6F74207175616472-     	err_msg_no_qeq db "Not quadratic equal"
    27 00000015 617469632065717561-
    28 0000001E 6C                 
    29                                  	len_nqe equ $-err_msg_no_qeq
    30                                  
    31                                  section .text
    32                                  _start:
    33 00000000 E8(00000000)            	call inputNumber
    34 00000005 A3[00000000]            	mov [a], eax
    35 0000000A E8(00000000)            	call inputNumber
    36 0000000F A3[04000000]            	mov [b], eax
    37 00000014 E8(00000000)            	call inputNumber
    38 00000019 A3[08000000]            	mov [c], eax
    39 0000001E 66C705[10000000]04-     	mov word [buff], 4
    40 00000026 00                 
    41                                  
    42                                  	;mov dword [hmm], 1000
    43                                  
    44 00000027 9BDBE3                  	finit
    45 0000002A DB05[00000000]          	fild dword [a]
    46 00000030 D9E4                    	ftst
    47 00000032 9BDFE0                  	fstsw ax
    48 00000035 9E                      	sahf
    49 00000036 0F84A3000000            	je near .notQEq
    50 0000003C DDC1                    	ffree
    51                                  
    52                                  	;;; Discriminant
    53 0000003E DB05[04000000]          	fild dword [b]
    54 00000044 D8C8                    	fmul st0
    55 00000046 DF05[10000000]          	fild word [buff]
    56 0000004C DB05[00000000]          	fild dword [a]
    57 00000052 DEC9                    	fmulp st1
    58 00000054 DB05[08000000]          	fild dword [c]
    59 0000005A DEC9                    	fmulp st1
    60 0000005C D8E9                    	fsubr st1
    61                                  
    62 0000005E DB15[0C000000]          	fist dword [disc]
    63 00000064 A1[0C000000]            	mov eax, [disc]
    64                                  
    65 00000069 85C0                    	test eax, eax
    66 0000006B 0F8C8B000000            	jl near .noSolution
    67                                  
    68 00000071 D9FA                    	fsqrt
    69                                  
    70                                  	;;; End discriminant
    71                                  	;;; Start Roots
    72                                  	;;; First root
    73 00000073 DB05[04000000]          	fild dword [b]
    74 00000079 D8E1                    	fsub st1
    75 0000007B 66C705[10000000]02-     	mov word [buff], 2
    76 00000083 00                 
    77 00000084 DF05[10000000]          	fild word [buff]
    78 0000008A DB05[00000000]          	fild dword [a]
    79 00000090 DEC9                    	fmulp st1
    80 00000092 DEF9                    	fdivp st1
    81                                  	;fild dword [hmm]
    82                                  	;fmulp
    83                                  	;fistp dword [result]
    84                                  	;fild dword [result]
    85                                  	;fild dword [hmm]
    86                                  	;fdivp
    87                                  
    88                                  
    89 00000094 D9C9                    	fxch st1
    90                                  
    91                                  	;;; End first root
    92                                  	;;; Second root
    93 00000096 DB05[04000000]          	fild dword [b]
    94 0000009C DEC1                    	faddp
    95 0000009E DF05[10000000]          	fild word [buff]
    96 000000A4 DB05[00000000]          	fild dword [a]
    97 000000AA DEC9                    	fmulp
    98 000000AC DEF9                    	fdivp
    99                                  	;fild dword [hmm]
   100                                  	;fmulp
   101                                  	;fistp dword [result]
   102                                  	;fild dword [result]
   103                                  	;fild dword [hmm]
   104                                  	;fdivp
   105                                  	;;; End second
   106                                  
   107 000000AE 66C705[10000000]00-     	mov word [buff], 0
   108 000000B6 00                 
   109 000000B7 DF05[10000000]          	fild word [buff]
   110 000000BD D9C9                    	fxch
   111 000000BF D8E9                    	fsubr st1
   112 000000C1 D9CA                    	fxch st2
   113 000000C3 DEE9                    	fsubp st1
   114                                  
   115 000000C5 D91D[12000000]          	fstp dword [result]
   116 000000CB FF35[12000000]          	push dword [result]
   117 000000D1 D91D[12000000]          	fstp dword [result]
   118 000000D7 FF35[12000000]          	push dword [result]
   119                                  	;;; |x1|
   120                                  	;;; |x2|
   121                                  	
   122 000000DD EB3A                    	jmp short .outNumber
   123                                  
   124                                  .notQEq:
   125 000000DF B804000000              	mov eax, 4
   126 000000E4 BB01000000              	mov ebx, 1
   127 000000E9 B9[0C000000]            	mov ecx, err_msg_no_qeq
   128 000000EE BA13000000              	mov edx, len_nqe
   129 000000F3 CD80                    	int 80h
   130 000000F5 E8(00000000)            	call finish
   131 000000FA EB27                    	jmp short _end
   132                                  
   133                                  .noSolution:
   134 000000FC B804000000              	mov eax, 4
   135 00000101 BB01000000              	mov ebx, 1
   136 00000106 B9[00000000]            	mov ecx, err_msg
   137 0000010B BA0C000000              	mov edx, len
   138 00000110 CD80                    	int 80h
   139 00000112 E8(00000000)            	call finish
   140 00000117 EB0A                    	jmp short _end
   141                                  
   142                                  .outNumber:
   143 00000119 E8(00000000)            	call outputNumber
   144 0000011E 83C408                  	add esp, 8
   145                                  
   146 00000121 EB00                    	jmp short _end
   147                                  	
   148                                  _end:
   149 00000123 E8(00000000)            	call finish
